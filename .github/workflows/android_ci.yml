name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Annuler les builds pr√©c√©dents si un nouveau push arrive
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
      ANDROID_HOME: ${{ github.workspace }}/.android-sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}
          key: ${{ runner.os }}-android-sdk-35
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Install Android SDK
        run: |
          if [ ! -d "$ANDROID_SDK_ROOT/platforms/android-35" ]; then
            mkdir -p ~/.android && touch ~/.android/repositories.cfg
            mkdir -p "$ANDROID_SDK_ROOT"
            curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o /tmp/cmdline-tools.zip
            unzip -q /tmp/cmdline-tools.zip -d /tmp/android-cmdline-tools
            mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
            mv /tmp/android-cmdline-tools/cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
            yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-35" "build-tools;35.0.0"
          fi
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Clean project
        run: ./gradlew clean --no-daemon

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon --stacktrace --build-cache

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --no-daemon --stacktrace --build-cache
        continue-on-error: false

      - name: Generate test coverage report
        if: success()
        run: ./gradlew jacocoTestReport --no-daemon
        continue-on-error: true

      - name: Run Lint checks
        run: ./gradlew lintDebug --no-daemon --build-cache
        continue-on-error: true

      # Upload des r√©sultats de test
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            app/build/test-results/**/*.xml
            app/build/test-results/**/*.html
          retention-days: 7

      # Upload du rapport de couverture
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: app/build/reports/jacoco/**/*
          retention-days: 7

      # Upload du rapport Lint
      - name: Upload Lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: |
            app/build/reports/lint-*.html
            app/build/reports/lint-*.xml
          retention-days: 7

      # Upload des APKs g√©n√©r√©s
      - name: Upload Debug APKs
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apks
          path: app/build/outputs/apk/*/debug/*.apk
          if-no-files-found: error
          retention-days: 14

      # R√©sum√© du build
      - name: Build summary
        if: always()
        run: |
          echo "## Build Summary üìä" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "app/build/outputs/apk/preprod/debug/app-preprod-debug.apk" ]; then
            APK_SIZE=$(du -h app/build/outputs/apk/preprod/debug/app-preprod-debug.apk | cut -f1)
            echo "- **APK Size (Preprod):** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "app/build/outputs/apk/prod/debug/app-prod-debug.apk" ]; then
            APK_SIZE=$(du -h app/build/outputs/apk/prod/debug/app-prod-debug.apk | cut -f1)
            echo "- **APK Size (Prod):** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          fi

  # Job s√©par√© pour les v√©rifications de s√©curit√© (optionnel mais recommand√©)
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dependency vulnerability scan
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dependencyCheckAnalyze --no-daemon
        continue-on-error: true

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: build/reports/dependency-check-report.html
          retention-days: 7